html_php_mysql.txt
======================= BimbaLaszlo(.co.nr|gmail.com) ==== 2014.03.17 08:50 ==

                                     HTML                                 {{{1
==============================================================================
                                                                      tag:html

    Azokban az ûrlapokban, ahol több submit button is szerepel, az enter
    megnyomása mindig az elsõt aktiválja.

    Legördülõ listák elemein ne használj onclick event-et, mert nem minden
    böngészõ reagál rá (pl. chrome), inkább onchange legyen a feltétel:

      <select id="selectBox" onchange="this.form.submit();">
        <option value="1">Option #1</option>
        <option value="2">Option #2</option>
      </select>

    Oldal betöltése után egybõl küldjön post üzenetet:

      <body onload="document.atiranyitas.submit()">
        <form name="atiranyitas" action="cel_oldal.php" method="post">
          <input type="hidden" name="ertek" value="1"/>
        </form>
      </body>

                                     CSS                                  {{{1
==============================================================================
                                                                       tag:css

    Minden elem betûméretének növelése:

      *
      {
        font-size-adjust: 0.75;
      }

    Táblázat minden második sorának színezése:

      table > tbody > tr:nth-child(even)
      {
        background-color: #dcdcdc;
      }

    Többszínû táblázat sorok:

      table > tbody > tr:nth-child(3n+1)
      {
        background-color: #fff8dc;
      }

      table > tbody > tr:nth-child(3n+2)
      {
        background-color: #fffff0;
      }

      table > tbody > tr:nth-child(3n+3)
      {
        background-color: #f5f5dc;
      }

                                     PHP                                  {{{1
==============================================================================
                                                                       tag:php

                                     TÖMBÖK                               {{{2
  ____________________________________________________________________________

    Tömb elemeinek körbejárása:

      print_r( $tomb );

      var_dump( $tomb );

      foreach( $tomb as $elem )
      {
        echo $elem;
      }

    Azért kötjük if feltételhez a foreach-et, mert ha a tömb üres, akkor hibát
    ír ki.

      if( $tomb ) foreach( $tomb as $nev => $ertek )
      {
        echo $nev . ' => ' . $ertek;
      }

    Tömb összefûzése egy sztringgé:

      echo implode( ' + ', $tomb );

    Elem hozzáadása a tömbhöz:

      array_push( &$tomb, 'új elem' );

    Utolsó elem kivétele:

      $elem = array_pop( $tomb );

    Rendezés számérték alapján a key szerint:

      ksort( $tomb, SORT_NUMERIC );

    Uniq tömbön:

      $uj_tomb = array_unique( $tomb );

    Uniq többdimenziós tömbön (http://hu1.php.net/array_unique#97285)

      function super_unique($array)
      {
        $result = array_map("unserialize", array_unique(array_map("serialize", $array)));

        foreach ($result as $key => $value)
        {
          if ( is_array($value) )
          {
            $result[$key] = super_unique($value);
          }
        }

        return $result;
      }

    Ha egy függvénnyel egy tömb értékeit akarjuk megváltoztatni, akkor a
    deklaracioban ezt a szintaxist kell hasznalni:

      function fuggveny( &$tomb )

                                                                          {{{2

    Könyvtár tartalmának listája, csak a KIFEJEZÉSRE illeszkedõ tartalmat
    jeleníti meg (pl: '*.txt' ). Ha a FLAGS GLOB_ONLYDIR értékre van állitva,
    akkor csak a könyvtárakat keresi.

      glob( 'KIFEJEZÉS', FLAGS )

    Könyvtárak listája dátum szerint:

      $konyvtarak      = glob( '*', GLOB_ONLYDIR );
      $konyvtarak_date = array();

      foreach( $konyvtarak as $konyvtar )
      {
          $konyvtarak_date += array( $konyvtar => filemtime( $konyvtar ) );
      }
      asort( $konyvtarak_date );
      print_r( $konyvtarak_date );

    Futásidõ mérése:

      $ido = microtime();
      // mérendõ programrész
      echo 'program ideje: ' . microtime() - $ido;

    Tag-ek által közrefogott rész elmentése:

      $sztring = '[egyik]Lorem ipsum [masik]hakapeszimaki[/masik] odoor[/egyik]';

      $csere['egyik'] = "egyik része";
      $csere['masik'] = "masik része";

      // Kikeressük a nyitó tag-eket. (pl.: [sablon])
      preg_match_all( '/\[([a-z_]+)\]/', $sztring, $tag );

      // Minden tag-ek által közrefogott - azaz a ciklikusan behelyettesítendõ - részt elmentünk:
      // $ciklusok[tag] = 'tag-ek által közrefogott rész'
      foreach( $tag[1] as $nyito_tag )
      {
        preg_match_all( "/\[$nyito_tag\](.*)\[\/$nyito_tag\]/s", $sztring, $tartalom );
        $tartalmak[$nyito_tag] = $tartalom[1][0];
      }

      print_r( $tartalmak );

    Mysql kapcsolat:

      session_start();

      /* Az sql-t hasznalo fuggyveny elejen ellenorizzuk a kapcsolatot:
      *
      *    if(!( $_SESSION['mysql'] or mysql_kapcsolat() ))
      *    {
      *      return( -1 );
      *    }
      */

      function mysql_kapcsolat()
      {
        $felhasznalo = 'user';
        $jelszo      = 'pwd';
        $szerver     = 'sql.server.com';
        $adatbazis   = 'mydb';

        if( ! $_SESSION['mysql'] = @mysql_connect( $szerver, $felhasznalo, $jelszo ) )
        {
          $_SESSION['mysql'] = false;
          return( false );
        }

        if( ! @mysql_select_db( $adatbazis ) )
        {
          $_SESSION['mysql'] = false;
          return( false );
        }

        mysql_query( "SET NAMES 'utf8'" );
        return( true );
      }

    Tömb adatainak összefûzése mysql UPDATE-hez:

      <?PHP
      function adatok_osszefuzese( $adatok )
      {
        $ertekek = '';

        if( $adatok ) foreach( $adatok as $nev => $ertek )
        {
          $ertekek .= $nev . ' = "' . $ertek . '", ';
        }

        return( rtrim( $ertekek, ', ' ) );
      }

      mysql_query( 'UPDATE `tabla` SET ' . adatok_osszefuzese( $_POST['tomb'] ), $mysql );
      ?>

      <form method="post">
        <input name="tomb[egy]"   value="1"/>
        <input name="tomb[ketto]" value="2"/>
      </form>

                                    MYSQL                                 {{{1
==============================================================================
                                                                     tag:mysql

    Kapcsolat karakterkódolása:

      SET NAMES 'utf8'

    A SELECT gyakorlatilag egyfajta 'echo'-nak tekintheto:

      SELECT 1 + 1

    Mysql-ben ha egy identifier-t akarunk idézõjelek közé fogni (táblák,
    adatbázisok, cellák nevei), akkor a megszokott ' és " helyett a ` jelt
    (backtick) kell használni. Pl.:

      SELECT * FROM `vöröshagymás lekvár`

    Ha a SHOW TABLES eredményeit akarjuk megtudni a SELECT utasítással, akkor:

      SELECT table_name
      FROM `information_schema.tables`
      WHERE table_schema = 'adatbazis_neve'

    A lekérdezés soraiból vesszõvel elválasztott sztring (DISTINCT = uniq):

      SELECT oszlop, GROUP_CONCAT( DISTINCT osszefuzni_kivant_oszlop )
      FROM `tabla`
      GROUP BY oszlop

    Ha az összes (felhasználó által létrehozott) adatbázist és a hozzájuk
    tartozó táblákat akarjuk megjeleníteni, akkor:

      SELECT table_schema, table_name
      FROM `information_schema.tables`
      WHERE table_type = 'base table'

    Ha az oszlopokra is kíváncsiak vagyunk - itt nem tudom hogy lehet
    kiválasztani, hogy csak a user adatbázisokat mutassa:

      SELECT table_schema, table_name, column_name
      FROM `information_schema.columns`

    Adatokat INSERT-el, vagy ha már létezik a key, akkor UPDATE-el:

      INSERT INTO `tabla` (key, nev, kor)
      VALUES (1, "Laci", 28)
      ON DUPLICATE KEY UPDATE nev = VALUES( nev ), kor = VALUES( kor )

    Másolás egyik táblából a másikba:

      INSERT INTO `cel_tabla` (oszlop)
      SELECT oszlop
      FROM `forras_tabla`

    Adatok feltöltése szöveges fájlból (tabulátorokkal elválasztott mezõkkel):

      LOAD DATA LOCAL
      INFILE 'http://www.user.com/data.txt'
      INTO TABLE `tabla`
      LINES TERMINATED BY '\r\n'

                                     TMP                                  {{{1
==============================================================================

    FLOAT adatok valódi értékének kinyerése a CONCAT-tal lehetséges. Pl.:
      SELECT * FROM ertekek WHERE CONCAT( float_ertek ) = "3.14"
    De ez a >= eseten nem mukodik?!

  function orszag()
  {
    global
      $MYSQL;

    /* Azokat az orszagokat valasszuk ki, amelyek szerepelnek a futarszolgalat
     * utanvetes, vagy utanvetel nelkuli listajaban.
     *
     * DISTINCT                       linux uniq megfeleloje
     * FIND_IN_SET( 'b', 'a,b,c,d' )  -> 2
     */

    if( $lekerdezes = @mysql_query( 'SELECT DISTINCT orszagok.* FROM orszagok,futarszolgalat WHERE FIND_IN_SET( orszagok.id, futarszolgalat.' . ($_POST['utanvet'] == 'igen' ? 'utanvetes_' : '') . 'orszagok )', $MYSQL ) )
    {
      $szerepel = false;
      $lista = '<select name="orszag"><option value="">Kérem válasszon országot!</option>';

      while( $orszag = @mysql_fetch_assoc( $lekerdezes ) )
      {
        if( $_POST['orszag'] == $orszag['id'] )
        {
          $szerepel = true;
        }

        $lista .= '<option value="' . $orszag['id'] . '" ' . ($_POST['orszag'] == $orszag['id'] ? 'selected' : '') . ' onclick="this.form.submit()">' . $orszag['nev'] . ' (' . $orszag['id'] . ')</option>';
      }

      $lista .= '</select>';

      print_r( $lista );
    }

    echo '<br/>';
    return( $szerepel );
  }

__ _ ______________________________________

      $lekerdezes = @mysql_query( 'SELECT orszagok.orszag_id AS orszag_id, orszag_nev '
                                . 'FROM `orszagok_cegenkent` '
                                . 'INNER JOIN `orszagok` USING (orszag_id) '
                                . 'WHERE ceg_id = "' . $KIVALASZTOTT_CEG . '" '
                                , $MYSQL );

__ SQL UPDATE t2 adatai alapján t1 ________

UPDATE tableB t1
        INNER JOIN tableA t2
             ON t1.name = t2.name
SET t1.value = IF(t2.value > 0, t2.value, t1.value)
WHERE t2.name = 'Joe'
