#!/bin/zsh

# Use Emacs bindings (-v for Vi mode)
bindkey -e

# Recursive search on history.
bindkey '^p'   history-beginning-search-backward
bindkey '^[[A' history-beginning-search-backward  # Up (on TTY)
bindkey '^[OA' history-beginning-search-backward  # Up (on Xterm)
bindkey '^n'   history-beginning-search-forward
bindkey '^[[B' history-beginning-search-forward   # Down (on TTY)
bindkey '^[OB' history-beginning-search-forward   # Down (on Xterm)

# Ctrl + Arrows to jump between words
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# Less-gready Ctrl-W
autoload -U select-word-style
select-word-style bash
export WORDCHARS='.-'

# Edit current command line
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# Navi cheat sheet completion
# https://github.com/denisidoro/navi
if ( which navi > /dev/null ); then
  _navi_call() {
    local result="$(navi "$@" </dev/tty)"
    if [ -z "${result}" ]; then
      result="$(navi --print </dev/tty)"
    fi
    printf "%s" "$result"
  }

  _navi_widget() {
    local -r input="${LBUFFER}"
    local -r last_command="$(echo "${input}" | navi fn widget::last_command)"
    local find="$last_command"
    local replacement="$last_command"

    if [ -z "${last_command}" ]; then
      replacement="$(_navi_call --print)"
    elif [ "${LASTWIDGET}" = "_navi_widget" ] && [ "$input" = "$previous_output" ]; then
      find="$input"
      replacement="$(_navi_call --print --query "${previous_last_command:-$last_command}")"
    else
      replacement="$(_navi_call --print --best-match --query "${last_command}")"
    fi

    previous_last_command="$last_command"
    previous_output="${input//$find/$replacement}"

    zle kill-whole-line
    LBUFFER="${previous_output}"
    region_highlight=("P0 100 bold")
    zle redisplay
  }

  zle -N _navi_widget
  bindkey '^g' _navi_widget
fi
